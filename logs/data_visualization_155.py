# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-28 15:28:50

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.express as px
    import plotly.io as pio






    # Data is assumed to be passed as a DataFrame in data_raw
    
    # Create scatter plot with distinct markers for each Location
    fig = px.scatter(
        data_raw,
        x="Total Quantity",
        y="Total Sales Amount",
        color="Location",
        symbol="Location",
        hover_name="Location",
        title="Relationship Between Total Quantity and Total Sales Amount Across Customer Locations",
        labels={
            "Total Quantity": "Total Quantity",
            "Total Sales Amount": "Total Sales Amount"
        }
    )
    
    # Add regression line (trendline) using numpy polyfit
    x = data_raw["Total Quantity"]
    y = data_raw["Total Sales Amount"]
    
    # Fit linear regression line
    coeffs = np.polyfit(x, y, 1)
    poly_eq = np.poly1d(coeffs)
    
    # Generate x values for line (min to max)
    x_line = np.linspace(x.min(), x.max(), 100)
    y_line = poly_eq(x_line)
    
    # Add regression line trace
    fig.add_trace(
        go.Scatter(
            x=x_line,
            y=y_line,
            mode="lines",
            name="Trendline",
            line=dict(color="black", width=3, dash="dash")
        )
    )
    
    # Update layout to ensure regression line is visible and distinct
    fig.update_layout(
        legend_title_text="Location",
        legend=dict(itemsizing='constant'),
        xaxis_title="Total Quantity",
        yaxis_title="Total Sales Amount"
    )
    
    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)
    
    return fig_dict