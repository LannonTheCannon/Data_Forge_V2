# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-28 16:52:59

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Copy data to avoid modifying original
    df = data_raw.copy()

    # Convert Month to categorical with specified order (2,3,4)
    month_order = [2, 3, 4]
    df['Month'] = pd.Categorical(df['Month'], categories=month_order, ordered=True)

    # Since only one year, we use Year as hover info but not for grouping
    # Group bars by Category within each Month

    # Prepare categories and months
    categories = df['Category'].unique()
    months = df['Month'].cat.categories

    # Create a trace for each Category
    traces = []
    for category in sorted(categories):
        y_vals = []
        for month in months:
            val = df.loc[(df['Category'] == category) & (df['Month'] == month), 'Average_Price']
            y_vals.append(val.values[0] if not val.empty else 0)
        traces.append(
            go.Bar(
                name=category,
                x=[str(m) for m in months],
                y=y_vals,
                hovertemplate=(
                    'Year: 2025<br>Month: %{x}<br>Category: '+ category + '<br>Average Price: %{y:.2f}<extra></extra>'
                )
            )
        )

    # Build figure
    fig = go.Figure(data=traces)

    # Update layout for grouped bar chart
    fig.update_layout(
        barmode='group',
        title="Average Price by Month and Product Category for Year 2025",
        xaxis_title="Month",
        yaxis_title="Average Price",
        legend_title="Product Category",
        xaxis=dict(
            type='category',
            categoryorder='array',
            categoryarray=[str(m) for m in month_order]
        )
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict