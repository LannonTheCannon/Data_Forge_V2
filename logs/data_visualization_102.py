# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-17 11:42:27

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Aggregate data: mean of average_rating grouped by roast and loc_country
    agg_df = data_raw.groupby(['roast', 'loc_country'], as_index=False)['average_rating'].mean()

    # Sort roast categories based on the order in original data or logical order if known
    # Let's preserve the order from data_raw unique values for consistent display
    roast_order = data_raw['roast'].unique().tolist()
    agg_df['roast'] = pd.Categorical(agg_df['roast'], categories=roast_order, ordered=True)
    agg_df = agg_df.sort_values('roast')

    # Get unique loc_countries for grouping
    loc_countries = agg_df['loc_country'].unique()

    # Create traces for each loc_country
    data = []
    for country in loc_countries:
        df_country = agg_df[agg_df['loc_country'] == country]
        # Ensure all roast categories are represented, fill missing with NaN
        df_country = df_country.set_index('roast').reindex(roast_order).reset_index()

        trace = go.Bar(
            x=df_country['roast'],
            y=df_country['average_rating'],
            name=country,
            hovertemplate='%{x}<br>%{y:.2f}<extra>' + country + '</extra>'
        )
        data.append(trace)

    # Create layout
    layout = go.Layout(
        barmode='group',
        title='Mean Average Rating by Roast and Country',
        xaxis=dict(title='Roast'),
        yaxis=dict(title='Mean Average Rating'),
        legend=dict(title='Country'),
        template='plotly_white'
    )

    fig = go.Figure(data=data, layout=layout)

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict