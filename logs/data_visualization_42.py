# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-16 22:19:40

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Drop rows with missing country or genres since both are needed for grouping
    data = data_raw.dropna(subset=['country', 'genres']).copy()

    # Calculate average vote_average for each combination of country and genres
    grouped = data.groupby(['country', 'genres'], as_index=False)['vote_average'].mean()

    # Pivot the data to have countries as rows and genres as columns
    pivot_df = grouped.pivot(index='country', columns='genres', values='vote_average').fillna(0)

    # Sort countries alphabetically for consistent x-axis
    pivot_df = pivot_df.sort_index()

    # Create stacked bar chart traces for each genre
    fig = go.Figure()
    for genre in pivot_df.columns:
        fig.add_trace(go.Bar(
            x=pivot_df.index,
            y=pivot_df[genre],
            name=genre
        ))

    fig.update_layout(
        barmode='stack',
        xaxis_title='Country',
        yaxis_title='Average vote_average',
        title='Average vote_average by Genre and Country',
        legend_title_text='Genres',
        xaxis={'categoryorder':'category ascending'},
        height=600,
        margin=dict(t=60, b=150),
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict