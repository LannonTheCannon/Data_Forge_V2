# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-17 00:16:45

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Aggregate data by Year-Month and Category summing Quantity
    agg_df = data_raw.groupby(['Year-Month', 'Category'], as_index=False)['Quantity'].sum()

    # Sort Year-Month to ensure correct order on x-axis
    agg_df['Year-Month'] = pd.Categorical(agg_df['Year-Month'], 
                                         categories=sorted(data_raw['Year-Month'].unique()), 
                                         ordered=True)

    agg_df = agg_df.sort_values('Year-Month')

    # Extract unique categories and year-months for plotting
    categories = agg_df['Category'].unique()
    year_months = agg_df['Year-Month'].cat.categories

    # Create traces for each category
    traces = []
    for cat in categories:
        y_values = []
        # For each year-month get the summed quantity for this category or 0 if missing
        cat_data = agg_df[agg_df['Category'] == cat].set_index('Year-Month')
        for ym in year_months:
            y_values.append(cat_data['Quantity'].get(ym, 0))
        traces.append(go.Bar(name=cat, x=year_months, y=y_values))

    # Create the figure with grouped bar mode
    fig = go.Figure(data=traces)
    fig.update_layout(
        barmode='group',
        title='Total Quantity for Each Category Across Year-Month',
        xaxis_title='Year-Month',
        yaxis_title='Total Quantity',
        legend_title='Category',
        xaxis_tickangle=-45,
        template='plotly_white',
        margin=dict(t=80, b=140)
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict