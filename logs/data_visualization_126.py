# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-21 16:09:39

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Aggregate data by summing Count over (Discovery Year, Discovery Facility, Discovery Method)
    agg_df = (
        data_raw.groupby(['Discovery Year', 'Discovery Facility', 'Discovery Method'], as_index=False)
        .agg({'Count': 'sum'})
    )
    
    # Create a combined categorical variable for y-axis by concatenating facility and method
    agg_df['Facility_Method'] = agg_df['Discovery Facility'] + " | " + agg_df['Discovery Method']
    
    # Create pivot table with index=Facility_Method, columns=Discovery Year, values=Count
    pivot_table = agg_df.pivot(index='Facility_Method', columns='Discovery Year', values='Count')
    pivot_table = pivot_table.fillna(0)

    # To have consistent order by Facility and then Method, we sort index alphabetically
    pivot_table = pivot_table.sort_index()

    # Prepare hovertext matrix for each cell
    hover_text = []
    for fm in pivot_table.index:
        facility, method = fm.split(" | ", 1)
        row = []
        for year in pivot_table.columns:
            count = pivot_table.loc[fm, year]
            text = (f"Discovery Year: {year}<br>"
                    f"Discovery Facility: {facility}<br>"
                    f"Discovery Method: {method}<br>"
                    f"Count: {int(count)}")
            row.append(text)
        hover_text.append(row)

    # Build Heatmap trace
    fig = go.Figure(data=go.Heatmap(
        z=pivot_table.values,
        x=pivot_table.columns,
        y=pivot_table.index,
        colorscale='Viridis',
        colorbar=dict(title='Count'),
        hoverinfo='text',
        text=hover_text,
        zmin=0
    ))

    fig.update_layout(
        title="Heatmap of Discovery Methods by Facilities Over Time Highlighting Peaks in Detection",
        xaxis_title="Discovery Year",
        yaxis_title="Discovery Facility and Method",
        yaxis={'categoryorder':'array', 'categoryarray': pivot_table.index.to_list()},
        xaxis=dict(tickmode='linear'),
        height=900,
        margin=dict(t=100, l=300)
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict