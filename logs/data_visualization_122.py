# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-18 17:29:08

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.express as px
    import plotly.graph_objects as go
    import plotly.io as pio






    # Use columns: '100g_USD', 'rating', 'pearson_corr_100gUSD_rating'
    df = data_raw.copy()

    # Scatter plot with trendline (OLS)
    fig = px.scatter(
        df,
        x="100g_USD",
        y="rating",
        trendline="ols",
        labels={
            "100g_USD": "Price per 100g in USD",
            "rating": "Rating"
        },
        title="Scatter Plot of Price vs. Rating with Best-Fit Line and Correlation Coefficient"
    )

    # Extract correlation coefficient from the first row (all same)
    corr = df["pearson_corr_100gUSD_rating"].iloc[0]

    # Add correlation coefficient annotation top right
    # Position as relative to axes coordinates: x=1 (far right), y=1 (top)
    # Offset slightly inside the plot area
    fig.add_annotation(
        xref="paper", yref="paper",
        x=0.99, y=0.99,
        text=f"Pearson r = {corr:.5f}",
        showarrow=False,
        font=dict(size=12, color="black"),
        align="right",
        bordercolor="black",
        borderwidth=1,
        borderpad=4,
        bgcolor="white",
        opacity=0.8
    )

    fig.update_layout(
        xaxis_title="Price per 100g in USD",
        yaxis_title="Rating",
        margin=dict(l=60, r=40, t=80, b=60),
        template="plotly_white"
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict