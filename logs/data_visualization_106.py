# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-17 19:48:29

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio
    import plotly.express as px






    df = data_raw.copy()

    # Mapping some country names to standard ISO Alpha-3 codes for better choropleth matching
    # Plotly choropleth requires ISO Alpha-3 codes or standard country names recognized by plotly.
    # We will attempt to map using pycountry if available, else fallback to manual mapping for known names.

    # To avoid external dependencies, we implement a manual mapping dictionary for given countries:
    manual_iso_map = {
        "England": "GBR",
        "Australia": "AUS",
        "China": "CHN",
        "Hawai'i": "USA",  # Hawaii is part of USA
        "Hong Kong": "HKG",
        "Japan": "JPN",
        "Honduras": "HND",
        "Mexico": "MEX",
        "New Taiwan": "TWN",
        "Taiwan": "TWN",
        "United States": "USA",
        "Malaysia": "MYS",
        "Kenya": "KEN",
        "United States And Floyd": "USA",  # Unclear entity, assign USA for visualization
        "Canada": "CAN",
        "Peru": "PER",
        "Uganda": "UGA",
        "Guatemala": "GTM",
        "Belgium": "BEL"
    }

    df['iso_alpha'] = df['loc_country'].map(manual_iso_map)

    fig = px.choropleth(
        df,
        locations="iso_alpha",
        color="avg_100g_USD",
        hover_name="loc_country",
        color_continuous_scale="Viridis",
        title="Average Price of Coffee per 100g (USD) by Country",
        labels={"avg_100g_USD": "Avg Price (USD)"}
    )

    fig.update_geos(showcountries=True, countrycolor="LightGray")
    fig.update_layout(margin={"r":0,"t":50,"l":0,"b":0})

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict