# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-28 16:35:32

def data_visualization(data_raw):
    import pandas as pd
    import json
    import plotly.graph_objects as go
    import plotly.io as pio




    # Ensure data is clean and sorted for consistent color mapping
    df = data_raw.copy()
    df = df.dropna(subset=['Category', 'Sales_Proportion'])
    df = df.sort_values('Category')

    # Prepare the single bar's x-axis category label
    x_label = ["Sales Proportion by Category"]

    # Create a stacked bar chart where each category is a segment of the single bar
    fig = go.Figure()

    # Define distinct colors for each category for clarity
    color_map = {
        "Category_Clothing": "#636EFA",
        "Category_Electronics": "#EF553B",
        "Category_Footwear": "#00CC96",
        "Category_Home Appliances": "#AB63FA"
    }

    # Add one bar trace per category with the corresponding sales proportion
    for category in df['Category']:
        proportion = df.loc[df['Category'] == category, 'Sales_Proportion'].values[0]
        fig.add_trace(go.Bar(
            name=category,
            x=x_label,
            y=[proportion],
            marker_color=color_map.get(category, None),
            hovertemplate=f"{category}: {proportion:.2%}<extra></extra>"
        ))

    # Configure layout for stacked bar and titles
    fig.update_layout(
        barmode='stack',
        title_text="Proportion of Sales by Product Category",
        xaxis_title="Product Categories",
        yaxis_title="Sales Proportion",
        yaxis=dict(range=[0, 1], tickformat=".0%"),
        legend_title="Category",
        xaxis=dict(tickvals=x_label, ticktext=x_label)
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict