# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-17 19:53:53

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Aggregate data: average Profit grouped by Category and PaymentMode
    agg_df = data_raw.groupby(['Category', 'PaymentMode'], as_index=False)['Profit'].mean()

    # Get unique categories and payment modes to maintain order
    categories = agg_df['Category'].unique()
    payment_modes = agg_df['PaymentMode'].unique()

    # Prepare traces for each PaymentMode
    traces = []
    for pm in payment_modes:
        pm_values = []
        for cat in categories:
            val = agg_df.loc[(agg_df['Category'] == cat) & (agg_df['PaymentMode'] == pm), 'Profit']
            pm_values.append(val.values[0] if not val.empty else np.nan)
        traces.append(go.Bar(name=pm, x=categories, y=pm_values))

    fig = go.Figure(data=traces)

    fig.update_layout(
        barmode='group',
        title="Average Profit across Category grouped by PaymentMode",
        xaxis_title="Category",
        yaxis_title="Average Profit"
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict