# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-16 22:57:12

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Data is assumed to be a DataFrame with columns:
    # 'Environmental Impact', 'Technology Used', 'Average Success Rate (%)'

    # Extract unique categories for x and groups
    technologies = data_raw['Technology Used'].unique()
    env_impacts = data_raw['Environmental Impact'].unique()

    # Sort technologies for consistent order
    technologies = sorted(technologies)
    env_impacts = sorted(env_impacts)

    # Prepare grouped data for each Environmental Impact group
    data_by_env = {}
    for env in env_impacts:
        df_sub = data_raw[data_raw['Environmental Impact'] == env]
        # Align data in the order of technologies
        avg_success = []
        for tech in technologies:
            val = df_sub.loc[df_sub['Technology Used'] == tech, 'Average Success Rate (%)']
            if not val.empty:
                avg_success.append(val.values[0])
            else:
                avg_success.append(np.nan)
        data_by_env[env] = avg_success

    # Create a grouped bar chart
    fig = go.Figure()

    for env in env_impacts:
        fig.add_trace(go.Bar(
            x=technologies,
            y=data_by_env[env],
            name=env
        ))

    fig.update_layout(
        barmode='group',
        title='Average Success Rate (%) by Technology Used grouped by Environmental Impact',
        xaxis_title='Technology Used',
        yaxis_title='Average Success Rate (%)',
        legend_title='Environmental Impact'
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict