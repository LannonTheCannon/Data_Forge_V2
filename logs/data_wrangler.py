# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-27 17:56:47

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list.
    
    data_list: A list of one or more pandas data frames containing the raw data to be wrangled.
    '''


    # Ensure input is a list of dataframes
    if not isinstance(data_list, list):
        data_list = [data_list]

    # For this task, we only need to consider the first dataframe (main data)
    df = data_list[0].copy()

    # Step 1: Identify Payment Method Columns (one-hot encoded)
    payment_method_cols = [col for col in df.columns if col.startswith('Payment Method_')]

    # Step 2: Create a single 'Payment Method' column by finding which payment method is 1
    # Use idxmax along axis=1 to find the column with max value (which should be 1 in one-hot encoding)
    # Remove the prefix to get clean payment method names
    df['Payment Method'] = df[payment_method_cols].idxmax(axis=1).str.replace('Payment Method_', '')

    # Step 3: Group by 'Payment Method' and 'Status' and count the occurrences
    grouped = df.groupby(['Payment Method', 'Status']).size().reset_index(name='Count')

    # Step 4: Calculate total counts per 'Payment Method' for proportion calculation
    grouped['Total'] = grouped.groupby('Payment Method')['Count'].transform('sum')

    # Step 5: Calculate proportion of each 'Status' within each 'Payment Method'
    grouped['Proportion'] = grouped['Count'] / grouped['Total']

    # Step 6: Pivot the table for better readability
    proportion_pivot = grouped.pivot(index='Payment Method', columns='Status', values='Proportion').fillna(0)

    # Returning the pivot table with proportions per status per payment method
    return proportion_pivot