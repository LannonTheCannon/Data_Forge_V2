# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-15 19:23:51

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list and prepare for analysis.
    Creates a DataFrame with average salary_in_usd per job_title.
    '''


    # Ensure data_list is a list; if not, convert to list
    if not isinstance(data_list, list):
        data_list = [data_list]

    # Concatenate all dataframes in the list into a single DataFrame
    data = pd.concat(data_list, ignore_index=True)

    # Step 1: Verify dataset is loaded correctly - check shape and columns
    # (Optional: can be skipped in code, but ensures dataset is not empty)
    if data.empty:
        return pd.DataFrame()  # Return empty DataFrame if no data

    # Step 2: Filter relevant columns: 'job_title' and 'salary_in_usd'
    data = data[['job_title', 'salary_in_usd']]

    # Step 3: Check for missing/null values in these columns
    # Remove rows with nulls in either 'job_title' or 'salary_in_usd'
    data = data.dropna(subset=['job_title', 'salary_in_usd'])

    # Step 4: Group by 'job_title' and calculate the mean of 'salary_in_usd'
    grouped = data.groupby('job_title').agg({'salary_in_usd': 'mean'})

    # Step 5: Reset index to turn 'job_title' back into a column
    grouped = grouped.reset_index()

    # Step 6: Sort by 'salary_in_usd' in descending order for clarity
    grouped = grouped.sort_values(by='salary_in_usd', ascending=False).reset_index(drop=True)

    # The resulting DataFrame has 'job_title' and 'salary_in_usd' (average)
    return grouped