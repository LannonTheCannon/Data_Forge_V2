# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-19 18:28:40

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list.
    
    data_list: A list of one or more pandas data frames containing the raw data to be wrangled.
    '''


    # Ensure data_list is a list even if a single DataFrame is passed
    if not isinstance(data_list, list):
        data_list = [data_list]

    # According to the prompt, we only have one dataset named 'main'
    # So take the first DataFrame from the list for wrangling
    main = data_list[0]

    # Step 1: Inspect presence of relevant columns
    required_cols = ['loc_country', 'origin', 'rating']
    # Filter columns if missing any required column will raise KeyError automatically
    main = main[required_cols]

    # Step 2: Clean data
    # Drop rows where any of the required columns are missing or null
    main_clean = main.dropna(subset=required_cols).copy()

    # Ensure 'rating' is numeric (int or float), convert if necessary
    # If conversion fails, coerce errors to NaN and drop those rows
    main_clean['rating'] = pd.to_numeric(main_clean['rating'], errors='coerce')
    main_clean = main_clean.dropna(subset=['rating'])

    # Step 3 & 4: Group by 'loc_country' and 'origin' and calculate mean rating
    avg_ratings = (
        main_clean
        .groupby(['loc_country', 'origin'], as_index=False)['rating']
        .mean()
    )

    # Step 5: Reset index already done by as_index=False in groupby

    # Step 6: Sort by 'loc_country' ascending and 'rating' descending to highlight patterns
    avg_ratings = avg_ratings.sort_values(['loc_country', 'rating'], ascending=[True, False]).reset_index(drop=True)

    # Return the wrangled DataFrame with average ratings by loc_country and origin
    return avg_ratings