# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-15 20:18:47

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list and prepare it for visualization.
    '''


    # Ensure data_list is a list
    if not isinstance(data_list, list):
        data_list = [data_list]
        
    # Concatenate all dataframes into one, if multiple datasets are provided
    df = pd.concat(data_list, ignore_index=True)
    
    # Step 1: Verify structure and check for missing or anomalous values in key columns
    # Select relevant columns
    df = df[['experience_level', 'salary_in_usd']]
    
    # Remove duplicate rows to ensure data integrity
    df = df.drop_duplicates()
    
    # Drop rows with missing values in either column
    df = df.dropna(subset=['experience_level', 'salary_in_usd'])
    
    # Step 2: Filter or subset data if needed
    # For this scenario, no specific filtering is requested; proceed as is
    
    # Step 3: Ensure 'salary_in_usd' is numeric
    # Already of type int64 as per dataset info, but safeguard:
    df['salary_in_usd'] = pd.to_numeric(df['salary_in_usd'], errors='coerce')
    # Drop any rows where conversion resulted in NaN
    df = df.dropna(subset=['salary_in_usd'])
    
    # Step 4: Confirm 'experience_level' is categorical and consistent
    # Standardize experience_level categories by stripping whitespace and converting to string
    df['experience_level'] = df['experience_level'].astype(str).str.strip()
    
    # Optional: If there are typos or inconsistent categories, they can be standardized here
    # For this dataset, categories seem consistent, but we can enforce categories if desired
    # known_categories = ['EN', 'MI', 'SE']
    # df['experience_level'] = pd.Categorical(df['experience_level'], categories=known_categories)
    
    # Return the cleaned DataFrame
    return df