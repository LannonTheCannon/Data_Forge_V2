# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-21 16:28:14

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data.
    
    data_list: A list of one or more pandas data frames containing the raw data to be wrangled.
    '''


    # Ensure the input is a list even if a single DataFrame is passed
    if not isinstance(data_list, list):
        data_list = [data_list]

    # Since user instructions and data summary refer mainly to one dataset 'main',
    # we assume the first dataframe in the list is the relevant one for wrangling.
    # If multiple dataframes were present and needed merging, merging logic would apply here.
    df = data_list[0]

    # Step 1: Subset relevant columns needed for the analysis
    df_subset = df[['Year', 'Water Scarcity Level', 'Per Capita Water Use (Liters per Day)']].copy()

    # Step 2: Drop rows with missing values in any of the key columns
    df_subset = df_subset.dropna(subset=['Year', 'Water Scarcity Level', 'Per Capita Water Use (Liters per Day)'])

    # Step 3: Group by 'Year' and 'Water Scarcity Level' and calculate the mean per capita water use
    grouped = df_subset.groupby(['Year', 'Water Scarcity Level'], as_index=False).mean()

    # Step 4: Sort by 'Year' (and optionally by 'Water Scarcity Level' for organized output)
    grouped = grouped.sort_values(by=['Year', 'Water Scarcity Level']).reset_index(drop=True)

    # Optional Step 5: Pivot the data for better comparative analysis
    # Pivot will have years as rows, scarcity levels as columns, and mean per capita water use as values
    pivot_table = grouped.pivot(index='Year', columns='Water Scarcity Level',
                                values='Per Capita Water Use (Liters per Day)')

    # Step 6: No explicit outlier removal here as no instruction to modify data,
    # but the returned pivot facilitates spotting anomalies.

    # Return the pivot table for trend analysis across scarcity levels over time
    return pivot_table