# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-15 20:12:31

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list and prepare it for visualization.
    Specifically, this function:
    - Ensures 'salary_in_usd' is numeric.
    - Filters data if necessary (not specified here, so no filtering).
    - Recodes 'experience_level' for consistency.
    - Returns the cleaned DataFrame.
    '''


    # Ensure data_list is a list
    if not isinstance(data_list, list):
        data_list = [data_list]
    
    # Concatenate all dataframes in the list into a single DataFrame
    df = pd.concat(data_list, ignore_index=True)
    
    # Step 1: Ensure 'salary_in_usd' is numeric
    # Sometimes, 'salary_in_usd' might be of object type or contain non-numeric values
    df['salary_in_usd'] = pd.to_numeric(df['salary_in_usd'], errors='coerce')
    # Drop rows with NaN in 'salary_in_usd' after coercion
    df = df.dropna(subset=['salary_in_usd'])
    
    # Step 2: Filter data if needed (no specific criteria provided, so we skip)
    
    # Step 3: Standardize 'experience_level'
    # Check unique values to see if recoding is necessary
    # Common labels in data: 'EN', 'SE', 'MI' (Entry, Senior, Mid)
    # Let's recode them for clarity
    experience_mapping = {
        'EN': 'Entry',
        'SE': 'Senior',
        'MI': 'Mid'
    }
    df['experience_level'] = df['experience_level'].map(experience_mapping).fillna(df['experience_level'])
    
    # Optional: Convert 'experience_level' to categorical with a specific order
    experience_categories = ['Entry', 'Mid', 'Senior']
    df['experience_level'] = pd.Categorical(df['experience_level'], categories=experience_categories, ordered=True)
    
    # Return the cleaned DataFrame
    return df