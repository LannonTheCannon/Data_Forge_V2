# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-16 21:57:25

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Prepare the data in long format for box plotting
    metrics = ['min', 'median', 'mean', 'max']
    df_long = pd.melt(
        data_raw,
        id_vars=['experience_level'],
        value_vars=metrics,
        var_name='Salary Metric',
        value_name='Salary Value'
    )

    # Since the data is already aggregated (summary stats per group), 
    # we'll plot each metric as a box (really as a point, since there's only one value per group per metric).
    # To simulate a box plot, we'll use scatter points per metric within each experience_level.

    fig = go.Figure()

    colors = {
        'min': 'rgba(31, 119, 180, 0.7)',
        'median': 'rgba(255, 127, 14, 0.7)',
        'mean': 'rgba(44, 160, 44, 0.7)',
        'max': 'rgba(214, 39, 40, 0.7)'
    }

    for metric in metrics:
        metric_data = df_long[df_long['Salary Metric'] == metric]
        fig.add_trace(
            go.Box(
                y=metric_data['Salary Value'],
                x=metric_data['experience_level'],
                name=metric.capitalize(),
                marker_color=colors[metric],
                boxmean=False,
                boxpoints='all',
                jitter=0.3,
                pointpos=0,
                showlegend=True
            )
        )

    fig.update_layout(
        title="Distribution of Salary Metrics by Experience Level",
        xaxis_title="Experience Level",
        yaxis_title="Salary Metrics",
        boxmode='group'
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict