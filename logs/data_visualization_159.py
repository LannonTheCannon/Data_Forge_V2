# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-28 15:55:01

def data_visualization(data_raw):
    import pandas as pd
    import json
    import plotly.graph_objects as go
    import plotly.io as pio




    # Use the provided data as is since no missing values or cleaning needed
    df = data_raw.copy()

    # Scale Avg Total Sales to thousands for better comparison on y-axis
    df["Avg Total Sales (k)"] = df["Avg Total Sales"] / 1000

    # Create grouped bar chart
    fig = go.Figure()

    fig.add_trace(go.Bar(
        x=df["Status"],
        y=df["Avg Total Sales (k)"],
        name="Avg Total Sales (k)",
        marker_color='steelblue',
        text=df["Avg Total Sales (k)"].round(2),
        textposition='auto'
    ))

    fig.add_trace(go.Bar(
        x=df["Status"],
        y=df["Avg Purchase Frequency"],
        name="Avg Purchase Frequency",
        marker_color='indianred',
        text=df["Avg Purchase Frequency"].round(2),
        textposition='auto'
    ))

    fig.update_layout(
        barmode='group',
        title="Comparison of Average Total Sales and Purchase Frequency by Customer Status",
        xaxis_title="Customer Status",
        yaxis_title="Average Values",
        yaxis=dict(
            rangemode='tozero'
        ),
        legend_title_text="Metrics",
        template="plotly_white"
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict